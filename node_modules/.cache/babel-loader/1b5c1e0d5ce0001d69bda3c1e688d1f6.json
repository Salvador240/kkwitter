{"ast":null,"code":"import _classCallCheck from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/src/components/Message.js\";\nimport React, { Component } from \"react\";\nimport { Card, Menu, Button, Image, Segment } from 'semantic-ui-react';\nimport { toggleLike } from \"../actions\";\nimport { throws } from \"assert\";\n\nvar Message =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Message, _Component);\n\n  function Message() {\n    _classCallCheck(this, Message);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Message).apply(this, arguments));\n  }\n\n  _createClass(Message, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(Image, {\n        floated: \"right\",\n        size: \"mini\",\n        src: \"https://react.semantic-ui.com/images/avatar/large/steve.jpg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }), React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, this.props.userName), React.createElement(Card.Meta, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Friends of Elliot\"), React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, this.props.text)), React.createElement(Card.Content, {\n        extra: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui two buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"ui olive button\",\n        onClick: this.props.toggleLike,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, this.props.isLiked ? \"unlike\" : \"like:\", this.props.numOfLikes)))) // <Card>\n      //     <h2>{this.props.userName}</h2>\n      //     <p>{this.props.text}</p>\n      //     <button onClick={this.props.toggleLike}>{this.props.isLiked ? \"unlike\" : \"like\"}</button>\n      // </Card>\n      // </>\n      // )\n      // console.log(this.props.toggleLike) */}\n      ;\n    }\n  }]);\n\n  return Message;\n}(Component);\n\nexport default Message;","map":{"version":3,"sources":["/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/src/components/Message.js"],"names":["React","Component","Card","Menu","Button","Image","Segment","toggleLike","throws","Message","props","userName","text","isLiked","numOfLikes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,EAAaC,IAAb,EAAkBC,MAAlB,EAA0BC,KAA1B,EAAiCC,OAAjC,QAA+C,mBAA/C;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,MAAT,QAAuB,QAAvB;;IAGMC,O;;;;;;;;;;;;;6BACO;AAEL,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,OAAf;AAAuB,QAAA,IAAI,EAAC,MAA5B;AAAmC,QAAA,GAAG,EAAC,6DAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc,KAAKC,KAAL,CAAWC,QAAzB,CAFF,EAGE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHF,EAIE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKD,KAAL,CAAWE,IADZ,CAJF,CADM,EASN,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,iBAAd;AAAgC,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWH,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiE,KAAKG,KAAL,CAAWG,OAAX,GAAqB,QAArB,GAAgC,OAAjG,EACC,KAAKH,KAAL,CAAWI,UADZ,CADF,CADF,CATM,CADJ,CAuBI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BJ;AAgCP;;;;EAnCqBb,S;;AAoCtB,eAAeQ,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {Card,Menu,Button, Image, Segment} from 'semantic-ui-react'\nimport { toggleLike } from \"../actions\";\nimport { throws } from \"assert\";\n\n\nclass Message extends Component {\n    render() {\n    \n        return(\n            <Card>\n      <Card.Content>\n        <Image floated='right' size='mini' src='https://react.semantic-ui.com/images/avatar/large/steve.jpg' />\n        <Card.Header>{this.props.userName}</Card.Header>\n        <Card.Meta>Friends of Elliot</Card.Meta>\n        <Card.Description>\n        {this.props.text}\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <div className='ui two buttons'>\n          <Button color=\"ui olive button\" onClick={this.props.toggleLike}>{this.props.isLiked ? \"unlike\" : \"like:\"}\n          {this.props.numOfLikes}\n          </Button>\n          \n          \n        </div>\n      </Card.Content>\n    </Card>\n            \n          \n           \n            // <Card>\n            //     <h2>{this.props.userName}</h2>\n            //     <p>{this.props.text}</p>\n            //     <button onClick={this.props.toggleLike}>{this.props.isLiked ? \"unlike\" : \"like\"}</button>\n            // </Card>\n            // </>\n            // )\n            // console.log(this.props.toggleLike) */}\n        )\n}}\nexport default Message;"]},"metadata":{},"sourceType":"module"}