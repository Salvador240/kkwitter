{"ast":null,"code":"import _defineProperty from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/src/components/RegisterForm.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { registerThenGoToUserLogin as register } from \"../actions\"; // import Spinner from \"react-spinkit\";\n// import { register } from \"../actions\";\n// import Spinner from \"react-spinkit\";\n\nimport { Card, Image, Input, Header, Button, Form, Divider } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport picture from \"../Images/favicon.ico\";\n\nvar RegisterForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RegisterForm, _Component);\n\n  function RegisterForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegisterForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegisterForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      username: \"\",\n      password: \"\"\n    };\n\n    _this.handleRegister = function (e) {\n      e.preventDefault();\n\n      _this.props.register(_this.state);\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    return _this;\n  }\n\n  _createClass(RegisterForm, [{\n    key: \"render\",\n    value: function render() {\n      var isLoading = this.props.isLoading;\n      return React.createElement(Card, {\n        centered: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Header, {\n        color: \"orange\",\n        textAlign: \"centered\",\n        as: \"h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Register as new user\"), React.createElement(Image, {\n        centered: \"true\",\n        src: picture,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Card.Meta, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleRegister,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"username\",\n        autoFocus: true,\n        required: true,\n        size: \"large\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"password\",\n        required: true,\n        size: \"large\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"text\",\n        name: \"displayName\",\n        placeholder: \"display name\",\n        required: true,\n        size: \"large\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Button, {\n        size: \"large\",\n        circular: true,\n        content: \"Login\",\n        primary: true,\n        type: \"submit\",\n        disabled: isLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), this.props.err && React.createElement(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.props.err)), React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Already have an account? \"), React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Button, {\n        class: \"ui olive basic button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Back to login\"))));\n    }\n  }]);\n\n  return RegisterForm;\n}(Component);\n\nexport default connect(function (_ref) {\n  var auth = _ref.auth;\n  return {\n    isLoading: auth.loginLoading,\n    err: auth.loginError\n  };\n}, {\n  register: register\n})(RegisterForm);","map":{"version":3,"sources":["/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/src/components/RegisterForm.js"],"names":["React","Component","connect","registerThenGoToUserLogin","register","Card","Image","Input","Header","Button","Form","Divider","Link","picture","RegisterForm","state","username","password","handleRegister","e","preventDefault","props","handleChange","setState","target","name","value","isLoading","err","color","auth","loginLoading","loginError"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { registerThenGoToUserLogin as register } from \"../actions\";\n// import Spinner from \"react-spinkit\";\n\n// import { register } from \"../actions\";\n\n// import Spinner from \"react-spinkit\";\n\nimport { Card, Image, Input, Header, Button, Form, Divider } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport picture from \"../Images/favicon.ico\";\n\n\n\nclass RegisterForm extends Component {\n  state = { username: \"\", password: \"\" };\n\n  handleRegister = e => {\n    e.preventDefault();\n    this.props.register(this.state);\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    const { isLoading } = this.props;\n    return (\n      <Card centered='true'>\n        <Header color='orange' textAlign='centered' as='h1'>Register as new user</Header>\n        <Image centered='true' src={picture} />\n        <Card.Content>\n          <Card.Meta>\n            <Form onSubmit={this.handleRegister}>\n              <label htmlFor=\"username\"></label>\n              <Input\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"username\"\n                autoFocus\n                required\n                size=\"large\"\n                onChange={this.handleChange}\n              />\n              <label htmlFor=\"password\"></label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"password\"\n                required\n                size=\"large\"\n                onChange={this.handleChange}\n              />\n              <label htmlFor=\"display\"></label>\n              <Input\n                type=\"text\"\n                name=\"displayName\"\n                placeholder=\"display name\"\n                required\n                size=\"large\"\n                onChange={this.handleChange}\n              />\n              <div></div>\n              <Divider />\n              \n             \n              <Button size='large' circular content='Login' primary type=\"submit\" disabled={isLoading} />\n            \n              </Form>\n              {this.props.err && <p style={{ color: \"red\" }}>{this.props.err}</p>}\n          </Card.Meta>\n          <Card.Description>Already have an account? </Card.Description>\n          <Link to=\"/\">\n          <Button class=\"ui olive basic button\">Back to login</Button>\n          </Link>\n          </Card.Content>\n      </Card>\n    );\n  }\n}\n\nexport default connect(\n  ({ auth }) => ({\n    isLoading: auth.loginLoading,\n    err: auth.loginError\n  }),\n  { register }\n)(RegisterForm);\n"]},"metadata":{},"sourceType":"module"}