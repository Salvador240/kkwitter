{"ast":null,"code":"import _classCallCheck from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/src/components/Register.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { register as _register } from \"../Actions/actions.js\";\nimport { Button, Form, Grid, Header, Image, Input, Segment } from \"semantic-ui-react\";\nimport picture from \"../Images/favicon.ico\";\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Register)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      username: \"\",\n      displayName: \"\",\n      password: \"\" // result: \"\" // say if failed or success; dont need b/c inside action\n\n    };\n\n    _this.handleUsernameChange = function (event) {\n      _this.setState({\n        username: event.target.value\n      });\n    };\n\n    _this.handleDisplayNameChange = function (event) {\n      _this.setState({\n        displayName: event.target.value\n      });\n    };\n\n    _this.handlePasswordChange = function (event) {\n      _this.setState({\n        password: event.target.value\n      });\n    };\n\n    _this.handleRegister = function (event) {\n      // translate state value to get this then put elsewhere\n      _this.props.register({\n        username: _this.state.username,\n        displayName: _this.state.displayName,\n        password: _this.state.password\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Grid, {\n        textAlign: \"center\",\n        style: {\n          height: \"100%\"\n        },\n        verticalAlign: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        style: {\n          maxWidth: 450\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Header, {\n        as: \"h1\",\n        color: \"blue\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Welcome to Kwitter!\"), React.createElement(Image, {\n        src: picture,\n        size: \"small\",\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(Header, {\n        as: \"h2\",\n        color: \"grey\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Register a New Account\"), React.createElement(Form, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        stacked: true,\n        color: \"grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        label: \"ALL FIELDS MUST HAVE 3-20 CHARACTERS\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        label: \"Username:\",\n        required: true,\n        placeholder: \"Username\",\n        type: \"text\",\n        control: Input,\n        autoFocus: true,\n        onChange: this.handleUsernameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        label: \"Display Name:\",\n        required: true,\n        placeholder: \"Display Name\",\n        type: \"text\",\n        control: Input,\n        onChange: this.handleDisplayNameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Form.Field, {\n        label: \"Password:\",\n        required: true,\n        placeholder: \"Password\",\n        type: \"password\",\n        control: Input,\n        onChange: this.handlePasswordChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(Button.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Button, {\n        positive: true,\n        size: \"large\",\n        onClick: this.handleRegister,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Create Your New Account!\"), React.createElement(Button.Or, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"large\",\n        color: \"yellow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Already Have an Account? Login Here!\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.props.result)))));\n    }\n  }]);\n\n  return Register;\n}(Component); // listen to state value to rerender when changes occur\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    result: state.registerResult\n  };\n}; // this gets into dispatch and returns props\n\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    // neesd all state stuff to create action thing\n    // register: (username, displayName, password) => dispatch(register(username, displayName, password))\n    register: function register(registerData) {\n      return dispatch(_register(registerData));\n    }\n  };\n}; // export default Register;\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","map":{"version":3,"sources":["/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/src/components/Register.js"],"names":["React","Component","Link","connect","register","Button","Form","Grid","Header","Image","Input","Segment","picture","Register","state","username","displayName","password","handleUsernameChange","event","setState","target","value","handleDisplayNameChange","handlePasswordChange","handleRegister","props","height","maxWidth","result","mapStateToProps","registerResult","mapDispatchToProps","dispatch","registerData"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAQ,IAARA,SAAT,QAAyB,uBAAzB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,MAJF,EAKEC,KALF,EAMEC,KANF,EAOEC,OAPF,QAQO,mBARP;AASA,OAAOC,OAAP,MAAoB,uBAApB;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,QAAQ,EAAE,EAHJ,CAIN;;AAJM,K;;UAQRC,oB,GAAuB,UAAAC,KAAK,EAAI;AAC9B,YAAKC,QAAL,CAAc;AACZL,QAAAA,QAAQ,EAAEI,KAAK,CAACE,MAAN,CAAaC;AADX,OAAd;AAGD,K;;UACDC,uB,GAA0B,UAAAJ,KAAK,EAAI;AACjC,YAAKC,QAAL,CAAc;AACZJ,QAAAA,WAAW,EAAEG,KAAK,CAACE,MAAN,CAAaC;AADd,OAAd;AAGD,K;;UACDE,oB,GAAuB,UAAAL,KAAK,EAAI;AAC9B,YAAKC,QAAL,CAAc;AACZH,QAAAA,QAAQ,EAAEE,KAAK,CAACE,MAAN,CAAaC;AADX,OAAd;AAGD,K;;UAKDG,c,GAAiB,UAAAN,KAAK,EAAI;AACxB;AACA,YAAKO,KAAL,CAAWtB,QAAX,CAAoB;AAClBW,QAAAA,QAAQ,EAAE,MAAKD,KAAL,CAAWC,QADH;AAElBC,QAAAA,WAAW,EAAE,MAAKF,KAAL,CAAWE,WAFN;AAGlBC,QAAAA,QAAQ,EAAE,MAAKH,KAAL,CAAWG;AAHH,OAApB;AAKD,K;;;;;;;6BAEQ;AACP,aACE,oBAAC,IAAD;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,KAAK,EAAE;AAAEU,UAAAA,MAAM,EAAE;AAAV,SAFT;AAGE,QAAA,aAAa,EAAC,QAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,KAAK,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFF,EAKE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEhB,OAAZ;AAAqB,QAAA,IAAI,EAAC,OAA1B;AAAkC,QAAA,QAAQ,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,KAAK,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCANF,EASE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,OAAO,MAAhB;AAAiB,QAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAC,sCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD,CAAM,KAAN;AACE,QAAA,KAAK,EAAC,WADR;AAEE,QAAA,QAAQ,MAFV;AAGE,QAAA,WAAW,EAAC,UAHd;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,OAAO,EAAEF,KALX;AAME,QAAA,SAAS,MANX;AAOE,QAAA,QAAQ,EAAE,KAAKQ,oBAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAWE,oBAAC,IAAD,CAAM,KAAN;AACE,QAAA,KAAK,EAAC,eADR;AAEE,QAAA,QAAQ,MAFV;AAGE,QAAA,WAAW,EAAC,cAHd;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,OAAO,EAAER,KALX;AAME,QAAA,QAAQ,EAAE,KAAKa,uBANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAmBE,oBAAC,IAAD,CAAM,KAAN;AACE,QAAA,KAAK,EAAC,WADR;AAEE,QAAA,QAAQ,MAFV;AAGE,QAAA,WAAW,EAAC,UAHd;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,OAAO,EAAEb,KALX;AAME,QAAA,QAAQ,EAAE,KAAKc,oBANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,EA2BE,oBAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,QAAQ,MAAhB;AAAiB,QAAA,IAAI,EAAC,OAAtB;AAA8B,QAAA,OAAO,EAAE,KAAKC,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAIE,oBAAC,MAAD,CAAQ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADF,CALF,CA3BF,EAsCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKC,KAAL,CAAWG,MAAjB,CAtCF,CADF,CATF,CALF,CADF;AA4DD;;;;EAlGoB5B,S,GAqGvB;;;AACA,IAAM6B,eAAe,GAAG,SAAlBA,eAAkB,CAAAhB,KAAK,EAAI;AAC/B,SAAO;AACLe,IAAAA,MAAM,EAAEf,KAAK,CAACiB;AADT,GAAP;AAGD,CAJD,C,CAKA;;;AACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACL;AACA;AACA7B,IAAAA,QAAQ,EAAE,kBAAA8B,YAAY;AAAA,aAAID,QAAQ,CAAC7B,SAAQ,CAAC8B,YAAD,CAAT,CAAZ;AAAA;AAHjB,GAAP;AAKD,CAND,C,CAOA;;;AACA,eAAe/B,OAAO,CACpB2B,eADoB,EAEpBE,kBAFoB,CAAP,CAGbnB,QAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../Actions/actions.js\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Input,\n  Segment\n} from \"semantic-ui-react\";\nimport picture from \"../Images/favicon.ico\";\n\nclass Register extends Component {\n  state = {\n    username: \"\",\n    displayName: \"\",\n    password: \"\"\n    // result: \"\" // say if failed or success; dont need b/c inside action\n  };\n\n  // function will go on dom, so need to bind correctly\n  handleUsernameChange = event => {\n    this.setState({\n      username: event.target.value\n    });\n  };\n  handleDisplayNameChange = event => {\n    this.setState({\n      displayName: event.target.value\n    });\n  };\n  handlePasswordChange = event => {\n    this.setState({\n      password: event.target.value\n    });\n  };\n  // if has same username, api will send an error; get list of all usernames and check forrepeats and do onBlur (when exiting that inout box; might need another endpoint to send username)\n  // need to think about success and error cases\n  // the fetch will have to be in redux when get there\n  // register would be connected through action creator b/c the event isnt being used in handler, so this code doesnt have to be connected inside this comp and can move in avtion creator\n  handleRegister = event => {\n    // translate state value to get this then put elsewhere\n    this.props.register({\n      username: this.state.username,\n      displayName: this.state.displayName,\n      password: this.state.password\n    });\n  };\n\n  render() {\n    return (\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100%\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <div />\n          <Header as=\"h1\" color=\"blue\" textAlign=\"center\">\n            Welcome to Kwitter!\n          </Header>\n          <Image src={picture} size=\"small\" centered />\n          <Header as=\"h2\" color=\"grey\" textAlign=\"center\">\n            Register a New Account\n          </Header>\n          <Form size=\"large\">\n            <Segment stacked color=\"grey\">\n              <Form.Field label=\"ALL FIELDS MUST HAVE 3-20 CHARACTERS\" />\n              <Form.Field\n                label=\"Username:\"\n                required\n                placeholder=\"Username\"\n                type=\"text\"\n                control={Input}\n                autoFocus\n                onChange={this.handleUsernameChange}\n              />\n              <Form.Field\n                label=\"Display Name:\"\n                required\n                placeholder=\"Display Name\"\n                type=\"text\"\n                control={Input}\n                onChange={this.handleDisplayNameChange}\n              />\n              <Form.Field\n                label=\"Password:\"\n                required\n                placeholder=\"Password\"\n                type=\"password\"\n                control={Input}\n                onChange={this.handlePasswordChange}\n              />\n              <Button.Group>\n                <Button positive size=\"large\" onClick={this.handleRegister}>\n                  Create Your New Account!\n                </Button>\n                <Button.Or />\n                <Link to=\"/\">\n                  <Button size=\"large\" color=\"yellow\">\n                    Already Have an Account? Login Here!\n                  </Button>\n                </Link>\n              </Button.Group>\n              <div>{this.props.result}</div>\n            </Segment>\n          </Form>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\n// listen to state value to rerender when changes occur\nconst mapStateToProps = state => {\n  return {\n    result: state.registerResult\n  };\n};\n// this gets into dispatch and returns props\nconst mapDispatchToProps = dispatch => {\n  return {\n    // neesd all state stuff to create action thing\n    // register: (username, displayName, password) => dispatch(register(username, displayName, password))\n    register: registerData => dispatch(register(registerData))\n  };\n};\n// export default Register;\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Register);\n\n\n"]},"metadata":{},"sourceType":"module"}