{"ast":null,"code":"import { domain, jsonHeaders, handleJsonResponse } from \"./constants\";\nimport { push } from \"connected-react-router\"; // action types\n\nexport var LOGIN = \"LOGIN\";\nexport var LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport var LOGIN_FAIL = \"LOGIN_FAIL\";\nvar url = domain + \"/auth\"; // action creators\n\nvar login = function login(loginData) {\n  return function (dispatch) {\n    dispatch({\n      type: LOGIN\n    });\n    return fetch(url + \"/login\", {\n      method: \"POST\",\n      headers: jsonHeaders,\n      body: JSON.stringify(loginData)\n    }).then(handleJsonResponse).then(function (result) {\n      return dispatch({\n        type: LOGIN_SUCCESS,\n        payload: result\n      });\n    }).catch(function (err) {\n      return Promise.reject(dispatch({\n        type: LOGIN_FAIL,\n        payload: err.message\n      }));\n    });\n  };\n};\n\nexport var loginThenGoToUserProfile = function loginThenGoToUserProfile(loginData) {\n  return function (dispatch) {\n    return dispatch(login(loginData)).then(function () {\n      return dispatch(push(\"/profile\"));\n    });\n  };\n};\nexport var registerThenGoToUserLogin = function registerThenGoToUserLogin(registerData) {\n  return function (dispatch) {\n    return dispatch(login(regiData)).then(function () {\n      return dispatch(push(\"/profile\"));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/src/actions/auth.js"],"names":["domain","jsonHeaders","handleJsonResponse","push","LOGIN","LOGIN_SUCCESS","LOGIN_FAIL","url","login","loginData","dispatch","type","fetch","method","headers","body","JSON","stringify","then","result","payload","catch","err","Promise","reject","message","loginThenGoToUserProfile","registerThenGoToUserLogin","registerData","regiData"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,WAAjB,EAA8BC,kBAA9B,QAAwD,aAAxD;AACA,SAASC,IAAT,QAAqB,wBAArB,C,CAEA;;AACA,OAAO,IAAMC,KAAK,GAAG,OAAd;AACP,OAAO,IAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,IAAMC,UAAU,GAAG,YAAnB;AAEP,IAAMC,GAAG,GAAGP,MAAM,GAAG,OAArB,C,CAEA;;AACA,IAAMQ,KAAK,GAAG,SAARA,KAAQ,CAAAC,SAAS;AAAA,SAAI,UAAAC,QAAQ,EAAI;AACrCA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEP;AADC,KAAD,CAAR;AAIA,WAAOQ,KAAK,CAACL,GAAG,GAAG,QAAP,EAAiB;AAC3BM,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,OAAO,EAAEb,WAFkB;AAG3Bc,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,SAAf;AAHqB,KAAjB,CAAL,CAKJS,IALI,CAKChB,kBALD,EAMJgB,IANI,CAMC,UAAAC,MAAM,EAAI;AACd,aAAOT,QAAQ,CAAC;AACdC,QAAAA,IAAI,EAAEN,aADQ;AAEde,QAAAA,OAAO,EAAED;AAFK,OAAD,CAAf;AAID,KAXI,EAYJE,KAZI,CAYE,UAAAC,GAAG,EAAI;AACZ,aAAOC,OAAO,CAACC,MAAR,CACLd,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEL,UAAR;AAAoBc,QAAAA,OAAO,EAAEE,GAAG,CAACG;AAAjC,OAAD,CADH,CAAP;AAGD,KAhBI,CAAP;AAiBD,GAtBsB;AAAA,CAAvB;;AAwBA,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAAjB,SAAS;AAAA,SAAI,UAAAC,QAAQ,EAAI;AAC/D,WAAOA,QAAQ,CAACF,KAAK,CAACC,SAAD,CAAN,CAAR,CAA2BS,IAA3B,CAAgC;AAAA,aAAMR,QAAQ,CAACP,IAAI,CAAC,UAAD,CAAL,CAAd;AAAA,KAAhC,CAAP;AACD,GAFgD;AAAA,CAA1C;AAGP,OAAO,IAAMwB,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAAC,YAAY;AAAA,SAAI,UAAAlB,QAAQ,EAAI;AACnE,WAAOA,QAAQ,CAACF,KAAK,CAACqB,QAAD,CAAN,CAAR,CAA0BX,IAA1B,CAA+B;AAAA,aAAMR,QAAQ,CAACP,IAAI,CAAC,UAAD,CAAL,CAAd;AAAA,KAA/B,CAAP;AACD,GAFoD;AAAA,CAA9C","sourcesContent":["import { domain, jsonHeaders, handleJsonResponse } from \"./constants\";\nimport { push } from \"connected-react-router\";\n\n// action types\nexport const LOGIN = \"LOGIN\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\n\nconst url = domain + \"/auth\";\n\n// action creators\nconst login = loginData => dispatch => {\n  dispatch({\n    type: LOGIN\n  });\n\n  return fetch(url + \"/login\", {\n    method: \"POST\",\n    headers: jsonHeaders,\n    body: JSON.stringify(loginData)\n  })\n    .then(handleJsonResponse)\n    .then(result => {\n      return dispatch({\n        type: LOGIN_SUCCESS,\n        payload: result\n      });\n    })\n    .catch(err => {\n      return Promise.reject(\n        dispatch({ type: LOGIN_FAIL, payload: err.message })\n      );\n    });\n};\n\nexport const loginThenGoToUserProfile = loginData => dispatch => {\n  return dispatch(login(loginData)).then(() => dispatch(push(\"/profile\")));\n};\nexport const registerThenGoToUserLogin = registerData => dispatch => {\n  return dispatch(login(regiData)).then(() => dispatch(push(\"/profile\")));\n};\n"]},"metadata":{},"sourceType":"module"}