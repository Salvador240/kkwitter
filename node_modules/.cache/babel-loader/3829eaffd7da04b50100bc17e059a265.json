{"ast":null,"code":"import _objectSpread from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { MessagesList } from \"./MessagesList\";\nimport { getMessages, toggleLike as _toggleLike } from \"../Actions/actions\";\nimport { connect } from \"react-redux\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    messages: state.loggedInUser.messages.map(function (message) {\n      var username = state.loggedInUser.username;\n      var like = message.likes.find(function (like) {\n        return like.userId === state.authentication.id;\n      });\n\n      if (like) {\n        return _objectSpread({}, message, {\n          username: username,\n          isLiked: true\n        });\n      } else {\n        return _objectSpread({}, message, {\n          username: username,\n          isLiked: false\n        });\n      }\n    })\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getMessages: function getMessages() {// dispatch(getMessages());\n    },\n    toggleLike: function toggleLike(messageId) {\n      return dispatch(_toggleLike(messageId));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessagesList);","map":{"version":3,"sources":["/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/src/components/UserMessages.js"],"names":["MessagesList","getMessages","toggleLike","connect","mapStateToProps","state","messages","loggedInUser","map","message","username","like","likes","find","userId","authentication","id","isLiked","mapDispatchToProps","dispatch","messageId"],"mappings":";AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,WAAT,EAAsBC,UAAU,IAAVA,WAAtB,QAAwC,oBAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLC,IAAAA,QAAQ,EAAED,KAAK,CAACE,YAAN,CAAmBD,QAAnB,CAA4BE,GAA5B,CAAgC,UAAAC,OAAO,EAAI;AACnD,UAAMC,QAAQ,GAAGL,KAAK,CAACE,YAAN,CAAmBG,QAApC;AACA,UAAMC,IAAI,GAAGF,OAAO,CAACG,KAAR,CAAcC,IAAd,CACX,UAAAF,IAAI;AAAA,eAAIA,IAAI,CAACG,MAAL,KAAgBT,KAAK,CAACU,cAAN,CAAqBC,EAAzC;AAAA,OADO,CAAb;;AAGA,UAAIL,IAAJ,EAAU;AACR,iCACKF,OADL;AAEEC,UAAAA,QAAQ,EAARA,QAFF;AAGEO,UAAAA,OAAO,EAAE;AAHX;AAKD,OAND,MAMO;AACL,iCACKR,OADL;AAEEC,UAAAA,QAAQ,EAARA,QAFF;AAGEO,UAAAA,OAAO,EAAE;AAHX;AAKD;AACF,KAlBS;AADL,GAAP;AAqBD,CAtBD;;AAwBA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLlB,IAAAA,WAAW,EAAE,uBAAM,CACjB;AACD,KAHI;AAILC,IAAAA,UAAU,EAAE,oBAAAkB,SAAS;AAAA,aAAID,QAAQ,CAACjB,WAAU,CAACkB,SAAD,CAAX,CAAZ;AAAA;AAJhB,GAAP;AAMD,CAPD;;AASA,eAAejB,OAAO,CACpBC,eADoB,EAEpBc,kBAFoB,CAAP,CAGblB,YAHa,CAAf","sourcesContent":["import { MessagesList } from \"./MessagesList\";\nimport { getMessages, toggleLike } from \"../Actions/actions\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.loggedInUser.messages.map(message => {\n      const username = state.loggedInUser.username;\n      const like = message.likes.find(\n        like => like.userId === state.authentication.id\n      );\n      if (like) {\n        return {\n          ...message,\n          username,\n          isLiked: true\n        };\n      } else {\n        return {\n          ...message,\n          username,\n          isLiked: false\n        };\n      }\n    })\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getMessages: () => {\n      // dispatch(getMessages());\n    },\n    toggleLike: messageId => dispatch(toggleLike(messageId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MessagesList);\n"]},"metadata":{},"sourceType":"module"}