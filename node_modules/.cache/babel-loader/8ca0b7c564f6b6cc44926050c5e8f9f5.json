{"ast":null,"code":"import _defineProperty from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/src/components/LoginForm.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { loginThenGoToUserProfile as login } from \"../actions\";\nimport Spinner from \"react-spinkit\";\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      username: \"\",\n      password: \"\"\n    };\n\n    _this.handleLogin = function (e) {\n      e.preventDefault();\n\n      _this.props.login(_this.state);\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isLoading = _this$props.isLoading,\n          err = _this$props.err;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Username\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Phone, Email or Username\",\n        autoFocus: true,\n        required: true,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        required: true,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Log in\")), isLoading && React.createElement(Spinner, {\n        name: \"circle\",\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), err && React.createElement(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, err));\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nexport default connect(function (_ref) {\n  var auth = _ref.auth;\n  return {\n    isLoading: auth.loginLoading,\n    err: auth.loginError\n  };\n}, {\n  login: login\n})(LoginForm);","map":{"version":3,"sources":["/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/src/components/LoginForm.js"],"names":["React","Component","connect","loginThenGoToUserProfile","login","Spinner","LoginForm","state","username","password","handleLogin","e","preventDefault","props","handleChange","setState","target","name","value","isLoading","err","color","auth","loginLoading","loginError"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAwB,IAAIC,KAArC,QAAkD,YAAlD;AACA,OAAOC,OAAP,MAAoB,eAApB;;IAEMC,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,K;;UAERC,W,GAAc,UAAAC,CAAC,EAAI;AACjBA,MAAAA,CAAC,CAACC,cAAF;;AACA,YAAKC,KAAL,CAAWT,KAAX,CAAiB,MAAKG,KAAtB;AACD,K;;UAEDO,Y,GAAe,UAAAH,CAAC,EAAI;AAClB,YAAKI,QAAL,qBAAiBJ,CAAC,CAACK,MAAF,CAASC,IAA1B,EAAiCN,CAAC,CAACK,MAAF,CAASE,KAA1C;AACD,K;;;;;;;6BAEQ;AAAA,wBACoB,KAAKL,KADzB;AAAA,UACCM,SADD,eACCA,SADD;AAAA,UACYC,GADZ,eACYA,GADZ;AAEP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAM,QAAA,QAAQ,EAAE,KAAKV,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,WAAW,EAAC,0BAHd;AAIE,QAAA,SAAS,MAJX;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,QAAQ,EAAE,KAAKI,YANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAUE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,EAWE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,WAAW,EAAC,UAHd;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,QAAQ,EAAE,KAAKA,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAkBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,QAAQ,EAAEK,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBF,CAFF,EA0BGA,SAAS,IAAI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,QAAd;AAAuB,QAAA,KAAK,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1BhB,EA2BGC,GAAG,IAAI;AAAG,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BD,GAA7B,CA3BV,CADF;AA+BD;;;;EA7CqBnB,S;;AAgDxB,eAAeC,OAAO,CACpB;AAAA,MAAGoB,IAAH,QAAGA,IAAH;AAAA,SAAe;AACbH,IAAAA,SAAS,EAAEG,IAAI,CAACC,YADH;AAEbH,IAAAA,GAAG,EAAEE,IAAI,CAACE;AAFG,GAAf;AAAA,CADoB,EAKpB;AAAEpB,EAAAA,KAAK,EAALA;AAAF,CALoB,CAAP,CAMbE,SANa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { loginThenGoToUserProfile as login } from \"../actions\";\nimport Spinner from \"react-spinkit\";\n\nclass LoginForm extends Component {\n  state = { username: \"\", password: \"\" };\n\n  handleLogin = e => {\n    e.preventDefault();\n    this.props.login(this.state);\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    const { isLoading, err } = this.props;\n    return (\n      <React.Fragment>\n        {/* <h1></h1> */}\n        <form onSubmit={this.handleLogin}>\n          <label htmlFor=\"username\">Username</label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"Phone, Email or Username\"\n            autoFocus\n            required\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"password\" >Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            required\n            onChange={this.handleChange}\n          />\n          <button type=\"submit\" disabled={isLoading}>\n            Log in\n          </button>\n\n          \n        </form>\n        {isLoading && <Spinner name=\"circle\" color=\"blue\" />}\n        {err && <p style={{ color: \"red\" }}>{err}</p>}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  ({ auth }) => ({\n    isLoading: auth.loginLoading,\n    err: auth.loginError\n  }),\n  { login }\n)(LoginForm);\n"]},"metadata":{},"sourceType":"module"}