{"ast":null,"code":"import { createBrowserHistory } from \"history\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport createRootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nexport var history = createBrowserHistory();\nexport default function configureStore(preloadedState) {\n  var store = createStore(createRootReducer(history), // root reducer with router state\n  preloadedState, composeWithDevTools(applyMiddleware(routerMiddleware(history), // for dispatching history actions\n  thunk // ... other middlewares ...\n  )));\n  return store;\n}","map":{"version":3,"sources":["/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/src/configureStore.js"],"names":["createBrowserHistory","applyMiddleware","createStore","routerMiddleware","createRootReducer","thunk","composeWithDevTools","history","configureStore","preloadedState","store"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,SAArC;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,iBAAP,MAA8B,YAA9B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAO,IAAMC,OAAO,GAAGP,oBAAoB,EAApC;AAEP,eAAe,SAASQ,cAAT,CAAwBC,cAAxB,EAAwC;AACrD,MAAMC,KAAK,GAAGR,WAAW,CACvBE,iBAAiB,CAACG,OAAD,CADM,EACK;AAC5BE,EAAAA,cAFuB,EAGvBH,mBAAmB,CACjBL,eAAe,CACbE,gBAAgB,CAACI,OAAD,CADH,EACc;AAC3BF,EAAAA,KAFa,CAGb;AAHa,GADE,CAHI,CAAzB;AAYA,SAAOK,KAAP;AACD","sourcesContent":["import { createBrowserHistory } from \"history\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport createRootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nexport const history = createBrowserHistory();\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    createRootReducer(history), // root reducer with router state\n    preloadedState,\n    composeWithDevTools(\n      applyMiddleware(\n        routerMiddleware(history), // for dispatching history actions\n        thunk\n        // ... other middlewares ...\n      )\n    )\n  );\n\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}