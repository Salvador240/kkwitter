{"ast":null,"code":"import { domain, handleJsonResponse, jsonHeaders } from \"./constants\"; //action types\n\nexport var GET_USER = \"GET_USER\";\nexport var GET_USER_SUCCESS = \"GET_USER_SUCCESS\";\nexport var GET_USER_FAIL = \"GET_USER_FAIL\";\nexport var GET_USERS = \"GET_USERS\";\nexport var UPLOAD_USER_IMAGE = \"UPLOAD_USER_IMAGE\";\nexport var UPLOAD_USER_IMAGE_SUCCESS = \"UPLOAD_USER_IMAGE_SUCCESS\";\nexport var UPLOAD_USER_IMAGE_FAIL = \"UPLOAD_USER_IMAGE_FAIL\";\nexport var DOWNLOAD_USER_IMAGE = \"DOWNLOAD_USER_IMAGE\";\nexport var DOWNLOAD_USER_IMAGE_SUCCESS = \"DOWNLOAD_USER_IMAGE_SUCCESS\";\nexport var DOWNLOAD_USER_IMAGE_FAIL = \"DOWNLOAD_USER_IMAGE_FAIL\";\nvar url = domain + \"/users\"; //action creators\n\nexport var getUserById = function getUserById(id) {\n  return function (dispatch) {\n    dispatch({\n      type: GET_USER\n    });\n    return fetch(url + \"/\".concat(id)).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      return dispatch({\n        type: GET_USER_SUCCESS,\n        payload: result\n      });\n    });\n  };\n};\nexport var getUsers = function getUsers() {\n  return function (dispatch) {\n    return fetch(url).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      return dispatch({\n        type: GET_USERS,\n        payload: result\n      });\n    });\n  };\n};\nexport var getLoggedInUser = function getLoggedInUser() {\n  return function (dispatch, getState) {\n    var loggedInUserId = getState().auth.login.id;\n    dispatch(getUserById(loggedInUserId));\n  };\n};\nexport var uploadUserImage = function uploadUserImage(formData) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: UPLOAD_USER_IMAGE\n    });\n    fetch(\"\".concat(url, \"/picture\"), {\n      method: \"PUT\",\n      headers: {\n        Authorization: \"Bearer \".concat(getState().auth.login.token)\n      },\n      body: formData\n    }).then(function (res) {\n      if (res.ok) {\n        dispatch({\n          type: UPLOAD_USER_IMAGE_SUCCESS,\n          userImageTimestamp: Date.now()\n        });\n        dispatch(downloadUserImage());\n        return;\n      }\n\n      return dispatch({\n        type: UPLOAD_USER_IMAGE_FAIL\n      });\n    });\n  };\n};\nexport var downloadUserImage = function downloadUserImage() {\n  return function (dispatch, getState) {\n    var loggedInUserId = getState().auth.login.id;\n    dispatch({\n      type: DOWNLOAD_USER_IMAGE\n    });\n    return fetch(\"\".concat(url, \"/\").concat(loggedInUserId, \"/picture\")).then(function (res) {\n      if (res.ok) {\n        return res.blob().then(function (result) {\n          return window.URL.createObjectURL(result);\n        });\n      }\n\n      return \"https://react.semantic-ui.com/images/avatar/large/rachel.png\";\n    }).then(function (result) {\n      dispatch({\n        type: DOWNLOAD_USER_IMAGE_SUCCESS,\n        userImage: result\n      });\n    }).catch(function (err) {\n      console.error(err);\n      dispatch({\n        type: DOWNLOAD_USER_IMAGE_FAIL\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/src/actions/users.js"],"names":["domain","handleJsonResponse","jsonHeaders","GET_USER","GET_USER_SUCCESS","GET_USER_FAIL","GET_USERS","UPLOAD_USER_IMAGE","UPLOAD_USER_IMAGE_SUCCESS","UPLOAD_USER_IMAGE_FAIL","DOWNLOAD_USER_IMAGE","DOWNLOAD_USER_IMAGE_SUCCESS","DOWNLOAD_USER_IMAGE_FAIL","url","getUserById","id","dispatch","type","fetch","then","res","json","result","payload","getUsers","getLoggedInUser","getState","loggedInUserId","auth","login","uploadUserImage","formData","method","headers","Authorization","token","body","ok","userImageTimestamp","Date","now","downloadUserImage","blob","window","URL","createObjectURL","userImage","catch","err","console","error"],"mappings":"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","sourcesContent":["import { domain, handleJsonResponse, jsonHeaders } from \"./constants\";\n\n//action types\nexport const GET_USER = \"GET_USER\";\nexport const GET_USER_SUCCESS = \"GET_USER_SUCCESS\";\nexport const GET_USER_FAIL = \"GET_USER_FAIL\";\nexport const GET_USERS = \"GET_USERS\";\n\nexport const UPLOAD_USER_IMAGE = \"UPLOAD_USER_IMAGE\";\nexport const UPLOAD_USER_IMAGE_SUCCESS = \"UPLOAD_USER_IMAGE_SUCCESS\";\nexport const UPLOAD_USER_IMAGE_FAIL = \"UPLOAD_USER_IMAGE_FAIL\";\n\nexport const DOWNLOAD_USER_IMAGE = \"DOWNLOAD_USER_IMAGE\";\nexport const DOWNLOAD_USER_IMAGE_SUCCESS = \"DOWNLOAD_USER_IMAGE_SUCCESS\";\nexport const DOWNLOAD_USER_IMAGE_FAIL = \"DOWNLOAD_USER_IMAGE_FAIL\";\n\nconst url = domain + \"/users\";\n\n//action creators\nexport const getUserById = id => dispatch => {\n  dispatch({\n    type: GET_USER\n  });\n\n  return fetch(url + `/${id}`)\n    .then(res => res.json())\n    .then(result => {\n      return dispatch({\n        type: GET_USER_SUCCESS,\n        payload: result\n      });\n    });\n};\nexport const getUsers = () => dispatch => {\n  return fetch(url)\n    .then(res => res.json())\n    .then(result => {\n      return dispatch({\n        type: GET_USERS,\n        payload: result\n      });\n    });\n};\n\nexport const getLoggedInUser = () => (dispatch, getState) => {\n  const loggedInUserId = getState().auth.login.id;\n  dispatch(getUserById(loggedInUserId));\n};\n\nexport const uploadUserImage = formData => (dispatch, getState) => {\n  dispatch({\n    type: UPLOAD_USER_IMAGE\n  });\n\n  fetch(`${url}/picture`, {\n    method: \"PUT\",\n    headers: {\n      Authorization: `Bearer ${getState().auth.login.token}`\n    },\n    body: formData\n  }).then(res => {\n    if (res.ok) {\n      dispatch({\n        type: UPLOAD_USER_IMAGE_SUCCESS,\n        userImageTimestamp: Date.now()\n      });\n      dispatch(downloadUserImage());\n      return;\n    }\n\n    return dispatch({\n      type: UPLOAD_USER_IMAGE_FAIL\n    });\n  });\n};\n\nexport const downloadUserImage = () => (dispatch, getState) => {\n  const loggedInUserId = getState().auth.login.id;\n  dispatch({ type: DOWNLOAD_USER_IMAGE });\n  return fetch(`${url}/${loggedInUserId}/picture`)\n    .then(res => {\n      if (res.ok) {\n        return res.blob().then(result => window.URL.createObjectURL(result));\n      }\n      return \"https://react.semantic-ui.com/images/avatar/large/rachel.png\";\n    })\n    .then(result => {\n      dispatch({\n        type: DOWNLOAD_USER_IMAGE_SUCCESS,\n        userImage: result\n      });\n    })\n    .catch(err => {\n      console.error(err);\n      dispatch({\n        type: DOWNLOAD_USER_IMAGE_FAIL\n      });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}