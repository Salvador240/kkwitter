{"ast":null,"code":"var _jsxFileName = \"/Users/Sdeg/Desktop/workspace/kwitters/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ConnectedRouter, routerMiddleware, connectRouter } from \"connected-react-router\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport kwitterReducer from \"./Reducers/reducer\";\nimport { createBrowserHistory } from \"history\";\nvar history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL\n});\nvar composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nvar store = createStore(connectRouter(history)(kwitterReducer), composeEnhancers(applyMiddleware(routerMiddleware(history), thunk)));\n\nvar Index = function Index() {\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(ConnectedRouter, {\n    history: history,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })));\n};\n\nReactDOM.render(React.createElement(Index, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/Sdeg/Desktop/workspace/kwitters/src/index.js"],"names":["React","ReactDOM","ConnectedRouter","routerMiddleware","connectRouter","App","serviceWorker","applyMiddleware","compose","createStore","thunk","Provider","kwitterReducer","createBrowserHistory","history","basename","process","env","PUBLIC_URL","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","Index","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SACEC,eADF,EAEEC,gBAFF,EAGEC,aAHF,QAIO,wBAJP;AAKA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,SAASC,oBAAT,QAAqC,SAArC;AAEA,IAAMC,OAAO,GAAGD,oBAAoB,CAAC;AAACE,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAAvB,CAAD,CAApC;AACA,IAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+Cb,OAAxE;AACA,IAAMc,KAAK,GAAGb,WAAW,CACvBL,aAAa,CAACU,OAAD,CAAb,CAAuBF,cAAvB,CADuB,EAEvBO,gBAAgB,CAACZ,eAAe,CAACJ,gBAAgB,CAACW,OAAD,CAAjB,EAA4BJ,KAA5B,CAAhB,CAFO,CAAzB;;AAKA,IAAMa,KAAK,GAAG,SAARA,KAAQ;AAAA,SACZ,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAER,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADY;AAAA,CAAd;;AAQAb,QAAQ,CAACuB,MAAT,CAAgB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA2BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA3B,E,CAEA;AACA;AACA;;AACApB,aAAa,CAACqB,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  ConnectedRouter,\n  routerMiddleware,\n  connectRouter\n} from \"connected-react-router\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport kwitterReducer from \"./Reducers/reducer\";\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory({basename: process.env.PUBLIC_URL});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  connectRouter(history)(kwitterReducer),\n  composeEnhancers(applyMiddleware(routerMiddleware(history), thunk))\n);\n\nconst Index = () => (\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>\n);\n\nReactDOM.render(<Index />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}