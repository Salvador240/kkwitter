{"ast":null,"code":"import _classCallCheck from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/src/components/Profile.js\";\nimport React, { Component } from \"react\";\nimport { Button, Card, Divider, Grid, Header, Image, Menu, Segment } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport UserMessages from \"./UserMessages\";\nimport picture from \"../Images/favicon.ico\";\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Profile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleUploadImage = function (event) {\n      event.preventDefault();\n      var formData = new FormData(event.target);\n\n      _this.props.uploadUserImage(formData);\n    };\n\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// this.props.getUsers();\n      // this.props.getLoggedInUser();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Grid, {\n        container: true,\n        stackable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Card, {\n        color: \"black\",\n        as: Menu,\n        animation: \"overlay\",\n        Icon: \"labeled\",\n        Inverted: true,\n        vertical: true,\n        width: \"thin\",\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Image, {\n        wrapped: true,\n        size: \"medium\",\n        src: this.props.userImageSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Segment, {\n        style: {\n          padding: \"1em 0em\"\n        },\n        inverted: true,\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        as: \"h2\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.props.username)), React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Card.Meta, {\n        as: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Display Name:\"), this.props.displayName), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Card.Meta, {\n        as: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"About Me:\"), this.props.about)), React.createElement(Card.Content, {\n        extra: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/editprofile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"large\",\n        color: \"yellow\",\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Edit Profile\"))))), React.createElement(Grid.Column, {\n        floated: \"right\",\n        width: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        basic: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h1\",\n        textAlign: \"center\",\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"My Messages\"), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(ProfileMess, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Image, {\n        src: picture,\n        size: \"medium\",\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nvar profilePicture = function profilePicture() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Image, {\n    size: \"tiny\",\n    verticalAlign: \"top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), \" \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Top Aligned\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    displayName: state.loggedInUser.displayName,\n    about: state.loggedInUser.about,\n    username: state.loggedInUser.username,\n    userImageSrc: state.loggedInUser.userImage\n  };\n};\n\nexport default connect(mapStateToProps, profilePicture)(Profile);","map":{"version":3,"sources":["/Users/Sdeg/Desktop/workspace/assessment---kwitter-frontend/src/components/Profile.js"],"names":["React","Component","Button","Card","Divider","Grid","Header","Image","Menu","Segment","Link","connect","UserMessages","picture","Profile","handleUploadImage","event","preventDefault","formData","FormData","target","props","uploadUserImage","userImageSrc","padding","username","displayName","about","profilePicture","mapStateToProps","state","loggedInUser","userImage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Card,\n  Divider,\n  Grid,\n  Header,\n  Image,\n  Menu,\n  Segment\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport UserMessages from \"./UserMessages\";\nimport picture from \"../Images/favicon.ico\";\n\n\nclass Profile extends Component {\n\n  componentDidMount() {\n    // this.props.getUsers();\n    // this.props.getLoggedInUser();\n  }\n  handleUploadImage = event => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    this.props.uploadUserImage(formData);\n  };\n\n\n  render() {\n    return (\n      <Grid container stackable>\n        <Grid.Row>\n          <Grid.Column width={6}>\n            <Card\n              color=\"black\"\n              as={Menu}\n              animation=\"overlay\"\n              Icon=\"labeled\"\n              Inverted\n              vertical\n              width=\"thin\"\n              fluid\n            >\n              <Card.Content>\n              <Image wrapped size=\"medium\" src={this.props.userImageSrc} />\n                <Segment style={{ padding: \"1em 0em\" }} inverted color=\"blue\">\n                  <Card.Header as=\"h2\" textAlign=\"center\">\n                    {this.props.username}\n                  </Card.Header>\n                </Segment>\n                <Card.Description>\n                  <Card.Meta as=\"h2\">Display Name:</Card.Meta>\n                  {this.props.displayName}\n                </Card.Description>\n                <Divider />\n                <Card.Description>\n                  <Card.Meta as=\"h2\">About Me:</Card.Meta>\n                  {this.props.about}\n                </Card.Description>\n              </Card.Content>\n              <Card.Content extra>\n                <Link to=\"/editprofile\">\n                  <Button size=\"large\" color=\"yellow\" fluid>\n                    Edit Profile\n                  </Button>\n                </Link>\n                {/* <Image wrapped size=\"medium\" src={this.props.userImageSrc} /> */}\n              </Card.Content>\n            </Card>\n          </Grid.Column>\n          <Grid.Column floated=\"right\" width={10}>\n            <Segment basic>\n              <Header as=\"h1\" textAlign=\"center\" color=\"blue\">\n                My Messages\n              </Header>\n              <Divider/>\n              <ProfileMess />\n              <br></br>\n              <Image src={picture} size=\"medium\" centered />\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\nconst profilePicture = () => (\n  <div>\n    <Image size=\"tiny\" verticalAlign=\"top\" /> <span>Top Aligned</span>\n    <Divider />\n  </div>\n);\n\nconst mapStateToProps = state => {\n  return {\n    displayName: state.loggedInUser.displayName,\n    about: state.loggedInUser.about,\n    username: state.loggedInUser.username,\n    userImageSrc: state.loggedInUser.userImage\n  };\n};\nexport default connect(\n  mapStateToProps,\n  profilePicture,\n)(Profile);"]},"metadata":{},"sourceType":"module"}